{
    "items": [
        {
            "title": "<b>Capture</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/capture",
            "link_title": "Learn more...",
            "static_thumbnail": "img/capture-0.gif",
            "active_thumbnail": "img/capture.gif",
            "body": "Shows how to configure, syncronize and render depth and RGB streams from a single RealSense device"
        },
     
        {
            "title": "<b>Save to Disk</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/save-to-disk",
            "link_title": "Learn more...",
            "static_thumbnail": "img/headless.png",
            "active_thumbnail": "img/headless.png",
            "body": "Demonstrate how to acquire and save video frames on a headless system without graphical user interface (GUI). Individual frames + metadata are save as PNG files."
        },
		
		{
            "title": "<b>Multi-cam</b>",
            "link": "https://github.com/IntelRealSense/librealsense/tree/master/examples/multicam",
            "link_title": "Learn more...",
            "static_thumbnail": "img/multicam.gif",
            "active_thumbnail": "https://raw.githubusercontent.com/wiki/IntelRealSense/librealsense/res/multi-cam-expected.gif",
            "body": "The multicam sample demonstrates the ability to use the SDK for streaming and rendering from multiple RealSense devices"
        },
		
		{
            "title": "<b>Point-cloud</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/pointcloud",
            "link_title": "Learn more...",
            "static_thumbnail": "img/pointcloud-0.gif",
            "active_thumbnail": "img/pointcloud.gif",
            "body": "Showcase Projection API while generating and rendering 3D pointcloud. "
        },
		
		{
            "title": "<b>Align</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/align",
            "link_title": "Learn more...",
            "static_thumbnail": "img/align-ex-0.gif",
            "active_thumbnail": "img/align-ex.gif",
            "body": "By default, different streams are not necessarily spatially aligned. This example shows how to align depth and color and filter the resulting RGBD image based on depth"
        },
		
		{
            "title": "<b>Post-Processing</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/post-processing",
            "link_title": "Learn more...",
            "static_thumbnail": "img/post.gif",
            "active_thumbnail": "https://user-images.githubusercontent.com/22654243/35924136-dd9cd1b6-0c2a-11e8-925a-84a52c0a5b96.gif",
            "body": "Demonstrating usage of post processing filters for depth images. The SDK offers several filters designed to improve the quality of depth from stereo at reasonable performance"
        },
		
		{
            "title": "<b>Playback & Record</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/record-playback",
            "link_title": "Learn more...",
            "static_thumbnail": "img/playback-0.gif",
            "active_thumbnail": "img/playback.gif",
            "body": "This examples shows the user how to record RealSense data to file (.bag) for later use and how to play such file back into the application"
        },
		
		{
            "title": "<b>Software Device</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/software-device",
            "link_title": "Learn more...",
            "static_thumbnail": "img/sd-0.gif",
            "active_thumbnail": "img/sd.gif",
            "body": "Shows how to create a custom rs2::device. This can be useful for development of converters from / to RealSense and integration with 3rd party devices."
        },
		
		{
            "title": "<b>Sensor Control</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/sensor-control",
            "link_title": "Learn more...",
            "static_thumbnail": "img/sensor-0.gif",
            "active_thumbnail": "img/sensor.gif",
            "body": "A tutorial for using the rs2::sensor API. Sensor API is designed to offer low-level access to the hardware, mapping more closely to underlying OS APIs"
		},

		{
            "title": "<b>Measure</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/examples/measure",
            "link_title": "Learn more...",
            "static_thumbnail": "https://raw.githubusercontent.com/wiki/IntelRealSense/librealsense/res/measure-expected.png",
            "active_thumbnail": "https://raw.githubusercontent.com/wiki/IntelRealSense/librealsense/res/measure-expected.png",
            "body": "This examples shows a very basic implementation of measurement using RGBD camera. "
		},
		
		{
            "title": "<b>Graph-Cuts</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/wrappers/opencv/grabcuts",
            "link_title": "Learn more...",
            "static_thumbnail": "img/graph-cuts-0.gif",
            "active_thumbnail": "img/graph-cuts.gif",
            "body": "Like rs-align, this example tries to dynamically remove background from an image. This time however background removal is done by <a href='https://docs.opencv.org/trunk/d8/d83/tutorial_py_grabcut.html' target='_blank'>OpenCV Grabcut</a> algorithm with depth data helping to distinguish foreground from background"
		},
		
		{
            "title": "<b>Latency Tool</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/wrappers/opencv/latency-tool",
            "link_title": "Learn more...",
            "static_thumbnail": "img/latency-0.gif",
            "active_thumbnail": "img/latency.gif",
            "body": "This tool / example shows how you can calculate a rough estimate on visual lattency using SDK and OpenCV tools. It measures total time since clock value is rendered until it is captured by the SDK"
		},
		
		{
            "title": "<b>Deep Neural Network</b>",
            "link": "https://github.com/IntelRealSense/librealsense/blob/master/wrappers/opencv/dnn",
            "link_title": "Learn more...",
            "static_thumbnail": "img/dnn-0.gif",
            "active_thumbnail": "img/dnn.gif",
            "body": "Intel RealSense camera used for real-time object-detection using OpenCV to run a MobileNet SSD Caffe model"
		}
	]
}
